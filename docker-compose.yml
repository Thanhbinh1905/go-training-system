services:
  migrate:
    build:
      context: .
      dockerfile: migration/Dockerfile
    container_name: migrate-service
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=
    restart: "no"
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    container_name: user-service
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      JWT_SECRET: ${JWT_SECRET}
      PRODUCTION: ${PRODUCTION}

  team-service:
    build:
      context: .
      dockerfile: services/team-service/Dockerfile
    container_name: team-service
    ports:
      - "8082:8080"
    depends_on:
      - postgres
      - user-service
    volumes:
      - .:/app 
      - ./services/team-service/logs:/app/logs
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      PRODUCTION: ${PRODUCTION}

  postgres:
    image: postgres:13.21-alpine3.21
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
  loki:
    image: grafana/loki:2.9.4
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.4
    volumes:
      - ./services/team-service/logs:/var/log/team-service
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      - loki
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090" # Prometheus UI and scraping
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle' # Enable /-/reload endpoint for config changes

  grafana:
    image: grafana/grafana:10.3.1
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
      - prometheus
volumes:
  postgres-data:
